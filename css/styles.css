
:root {
    --primary-color: #e60012; /* Основной цвет */
    --secondary-color: #222; /* Вторичный цвет */
    --background-color: #1e1e1e; /* Цвет фона */
    --text-color: #fff; /* Цвет текста */
    --muted-text-color: #888; /* Приглушенный цвет текста */
    --highlight-color: rgba(230, 0, 18, 0.6); /* Цвет подсветки с прозрачностью */
}
    
    body {
    font-family: 'Jost', sans-serif; /* Определяет шрифт текста. */
    margin: 0; /* Задает внешние отступы вокруг элемента. */
    padding: 0; /* Задает внутренние отступы внутри элемента. */
    background-color: var(--background-color); /* Устанавливает цвет фона элемента. */
    color: var(--text-color); /* Задает цвет текста. */
    overflow-x: hidden; /* Определяет, как отображается содержимое по горизонтали, если оно выходит за пределы контейнера. */
    }
    
    header {
    display: flex; /* Определяет тип отображения элемента (например, flex, block). */
    justify-content: space-between; /* Выравнивает элементы по главной оси flex-контейнера. */
    align-items: center; /* Выравнивает элементы по поперечной оси flex-контейнера. */
    padding: 20px; /* Задает внутренние отступы внутри элемента. */
    padding: 10px 20px; /* Задает внутренние отступы внутри элемента. */
    background-color: #111; /* Устанавливает цвет фона элемента. */
    }
    
    .logo {
    display: flex; /* Определяет тип отображения элемента (например, flex, block). */
    align-items: center; /* Выравнивает элементы по поперечной оси flex-контейнера. */
    gap: 10px; /* Устанавливает расстояние между элементами в flex-контейнере. */
    }
    
    .logo img {
    height: 50px; /* Задает высоту элемента. */
    }
    
    .tagline {
    margin-left: 15px; /* Описание этого свойства недоступно. */
    font-size: 14px; /* Задает размер текста. */
    color: var(--muted-text-color); /* Задает цвет текста. */
    white-space: nowrap; /* Определяет, как обрабатываются пробелы и переносы строк в тексте. */
    text-shadow: 0 0 10px var(--highlight-color); /* Добавляет тень к тексту. */
    }
    
    .login {
    padding: 15px 25px; /* Задает внутренние отступы внутри элемента. */
    border: unset; /* Устанавливает стиль, ширину и цвет границы элемента. */
    color: #ffffff; /* Задает цвет текста. */
    z-index: 1; /* Определяет порядок перекрытия элементов. */
    background: #2d2828; /* Описание этого свойства недоступно. */
    position: relative; /* Определяет способ позиционирования элемента. */
    font-weight: 1000; /* Определяет толщину шрифта. */
    font-size: 17px; /* Задает размер текста. */
    box-shadow: 4px 8px 19px -3px rgba(0, 0, 0, 0.27); /* Добавляет тень к элементу. */
    transition: all 250ms; /* Задает параметры анимации при изменении свойств. */
    text-decoration: none; /* Описание этого свойства недоступно. */
    display: inline-block; /* Определяет тип отображения элемента (например, flex, block). */
    }
    
    .login::before {
    content: ""; /* Описание этого свойства недоступно. */
    position: absolute; /* Определяет способ позиционирования элемента. */
    top: 0; /* Устанавливает смещение элемента сверху. */
    left: 0; /* Устанавливает смещение элемента слева. */
    height: 100%; /* Задает высоту элемента. */
    width: 0; /* Задает ширину элемента. */
    
    background-color: #d31717a8; /* Устанавливает цвет фона элемента. */
    z-index: -1; /* Определяет порядок перекрытия элементов. */
    box-shadow: 4px 8px 19px -3px rgba(255, 255, 255, 0.27); /* Добавляет тень к элементу. */
    transition: all 250ms; /* Задает параметры анимации при изменении свойств. */
    }
    
    .login:hover {
    color: #fefefe; /* Задает цвет текста. */
    }
    
    .login:hover::before {
    width: 100%; /* Задает ширину элемента. */
    }
    
    
    
    .hero {
    text-align: center; /* Выравнивает текст по горизонтали. */
    padding: 40px 0; /* Задает внутренние отступы внутри элемента. */
    background-color: var(--secondary-color); /* Устанавливает цвет фона элемента. */
    }
    
    .hero-image {
        width: 100%; /* Ширина 100% контейнера */
        max-width: 2000px; /* Максимальная ширина */
        height: 400px; /* Задаем фиксированную высоту */
        object-fit: cover; /* Устанавливаем, как изображение вписывается в заданную высоту */
        
    border: px solid var(--highlight-color); /* Устанавливает стиль, ширину и цвет границы элемента. */
        
    margin: 0 auto; /* Задает внешние отступы вокруг элемента. */
    }
    
    
    
    
    /* Video Section */
    .video {
        width: 100%; /* Растягиваем секцию на всю ширину экрана */
        max-width: 100vw; /* Ограничиваем ширину до окна браузера */
        margin: 0; /* Убираем внешние отступы */
        padding: 0; /* Убираем внутренние отступы */
        overflow: hidden; /* Убираем прокрутку, если есть */
    }
    
    .video video {
        width: 100%; /* Растягиваем на всю ширину */
        height: 500px; /* Устанавливаем фиксированную высоту */
        object-fit: cover; /* Обрезает содержимое, чтобы заполнить блок */
        border: none; /* Убираем рамки */
    }
    
    
    
    
    
    /* Benefits Section */
    .benefits {
        
    display: flex; /* Определяет тип отображения элемента (например, flex, block). */
    justify-content: space-between; /* Выравнивает элементы по главной оси flex-контейнера. */
    gap: 20px; /* Устанавливает расстояние между элементами в flex-контейнере. */
    padding: 40px 40px; /* Задает внутренние отступы внутри элемента. */
        margin-right: 20px; /* Добавление внешнего отступа для всей секции */
    }
    
    .benefit {
    text-align: left; /* Выравнивает текст по горизонтали. */
        flex-basis: 30%; /* Устанавливаем ширину каждого блока */
    padding: 30px; /* Задает внутренние отступы внутри элемента. */
    background-color: #333; /* Устанавливает цвет фона элемента. */
        margin-right: 20px; /* Добавление отступа справа */
    }
    
    
    .benefit:nth-child(2) {
        margin: 0 auto; /* Центрируем второй блок */
    }
    
    
    .benefit:hover {
    transform: translateY(-10px); /* Описание этого свойства недоступно. */
    }
    
    .benefit h3 {
    font-size: 20px; /* Задает размер текста. */
    margin-bottom: 10px; /* Описание этого свойства недоступно. */
    }
    
    .benefit p {
    font-size: 16px; /* Задает размер текста. */
    color: #bbb; /* Задает цвет текста. */
    line-height: 1.5; /* Определяет высоту строки текста. */
    }
    
    /* Product Details Section */
    .product-details {
    display: flex; /* Определяет тип отображения элемента (например, flex, block). */
    justify-content: center; /* Выравнивает элементы по главной оси flex-контейнера. */
    align-items: flex-start; /* Выравнивает элементы по поперечной оси flex-контейнера. */
    padding: 40px 20px; /* Задает внутренние отступы внутри элемента. */
    background-color: #181818; /* Устанавливает цвет фона элемента. */
    color: var(--text-color); /* Задает цвет текста. */
    gap: 20px; /* Устанавливает расстояние между элементами в flex-контейнере. */
    }
    
    .product-details img {
    max-width: 300px; /* Описание этого свойства недоступно. */
    border-radius: 10px; /* Описание этого свойства недоступно. */
    box-shadow: 0 0 15px rgba(0, 0, 0, 0.3); /* Добавляет тень к элементу. */
    }
    
    .product-details .details {
    max-width: 500px; /* Описание этого свойства недоступно. */
    }
    
    .product-details h2 {
    font-size: 24px; /* Задает размер текста. */
    margin-bottom: 20px; /* Описание этого свойства недоступно. */
    }
    
    .product-details ul {
    list-style: none; /* Определяет стиль списка (например, тип маркеров). */
    padding: 0; /* Задает внутренние отступы внутри элемента. */
    }
    
    .product-details li {
    margin-bottom: 10px; /* Описание этого свойства недоступно. */
    }
    
    
    
    
    /* Features Section */
    .features {
    display: flex; /* Определяет тип отображения элемента (например, flex, block). */
    justify-content: space-between; /* Выравнивает элементы по главной оси flex-контейнера. */
        gap: 20px; /* Расстояние между блоками */
        padding: 40px 40px; /* Внутренние отступы */
    margin-right: 20px; /* Описание этого свойства недоступно. */
    }
    
    .feature {
        text-align: left; /* Центрирование текста */
        flex-basis: 30%; /* Ширина каждого блока */
        padding: 30px; /* Внутренние отступы */
        background-color: #333; /* Фон блока */
    margin-right: 20px; /* Описание этого свойства недоступно. */
        
        box-shadow: 0 0 15px rgba(0, 0, 0, 0.2); /* Тень блока */
        transition: transform 0.3s; /* Анимация при наведении */
    }
    
    .feature:hover {
        transform: translateY(-10px); /* Анимация подъема при наведении */
    }
    
    .feature h3 {
        font-size: 20px; /* Размер заголовка */
    margin-bottom: 10px; /* Описание этого свойства недоступно. */
        color: #fff; /* Цвет текста */
    }
    
    .feature p {
        font-size: 16px; /* Размер текста */
        color: #bbb; /* Цвет текста */
        line-height: 1.5; /* Межстрочный интервал */
    }
    
    
    
    /* Signup Section */
    .signup {
    position: relative; /* Определяет способ позиционирования элемента. */
    padding: 40px 10px; /* Задает внутренние отступы внутри элемента. */
        width: calc(95% - 40px); /* Ширина с учетом отступов */
        background-color: #222; /* Фон секции */
    color: var(--text-color); /* Задает цвет текста. */
    padding-bottom: 40px; /* Описание этого свойства недоступно. */
    margin: 0 auto; /* Задает внешние отступы вокруг элемента. */
    margin-left: 40px; /* Описание этого свойства недоступно. */
    margin-bottom: 20px; /* Описание этого свойства недоступно. */
    margin-right: 50px; /* Описание этого свойства недоступно. */
    }
    
    .signup h2 {
    font-size: 24px; /* Задает размер текста. */
    margin-bottom: 20px; /* Описание этого свойства недоступно. */
    text-align: left; /* Выравнивает текст по горизонтали. */
    color: var(--text-color); /* Задает цвет текста. */
        
    padding-bottom: 5px; /* Описание этого свойства недоступно. */
    }
    
    
    .signup form {
    display: flex; /* Определяет тип отображения элемента (например, flex, block). */
    flex-direction: column; /* Описание этого свойства недоступно. */
    align-items: flex-start; /* Выравнивает элементы по поперечной оси flex-контейнера. */
        gap: 20px; /* Расстояние между полем и кнопкой */
    }
    
    .signup input {
    position: absolute; /* Определяет способ позиционирования элемента. */
    margin-top: 10px; /* Описание этого свойства недоступно. */
    padding: 15px; /* Задает внутренние отступы внутри элемента. */
    font-size: 18px; /* Задает размер текста. */
        
    border-radius: 5px; /* Описание этого свойства недоступно. */
    width: 50%; /* Задает ширину элемента. */
    background-color: var(--background-color); /* Устанавливает цвет фона элемента. */
    color: var(--text-color); /* Задает цвет текста. */
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.2); /* Добавляет тень к элементу. */
    }
    
    .signup button {
    padding: 15px 30px; /* Задает внутренние отступы внутри элемента. */
    font-size: 20px; /* Задает размер текста. */
    background-color: var(--primary-color); /* Устанавливает цвет фона элемента. */
    border: none; /* Устанавливает стиль, ширину и цвет границы элемента. */
    color: var(--text-color); /* Задает цвет текста. */
    cursor: pointer; /* Определяет тип курсора при наведении на элемент. */
    font-weight: bold; /* Определяет толщину шрифта. */
        align-self: flex-end; /* Кнопка выровнена по правому краю */
    transition: background-color 0.3s, transform 0.2s; /* Задает параметры анимации при изменении свойств. */
        margin-right: 95px; /* Отступ от правого края экрана */
        width: 30%; /* Кнопка занимает всю ширину родителя */
    }
    
    .signup button:hover {
    background-color: #c50010; /* Устанавливает цвет фона элемента. */
    transform: translateY(-5px); /* Описание этого свойства недоступно. */
    }
    
    
    
    
    
    
    /* Footer Section */
    footer {
    display: flex; /* Определяет тип отображения элемента (например, flex, block). */
    justify-content: space-between; /* Выравнивает элементы по главной оси flex-контейнера. */
    align-items: center; /* Выравнивает элементы по поперечной оси flex-контейнера. */
    padding: 20px; /* Задает внутренние отступы внутри элемента. */
    background-color: #111; /* Устанавливает цвет фона элемента. */
    }
    
    .footer-menu a {
    color: var(--muted-text-color); /* Задает цвет текста. */
    text-decoration: none; /* Описание этого свойства недоступно. */
    margin: 0 10px; /* Задает внешние отступы вокруг элемента. */
    }
    
    .footer-menu a:hover {
    color: var(--primary-color); /* Задает цвет текста. */
    }
    
    .social-media a img {
    height: 30px; /* Задает высоту элемента. */
    margin: 0 5px; /* Задает внешние отступы вокруг элемента. */
    }
    
    /* Testimonials Section */
    .testimonials {
    text-align: center; /* Выравнивает текст по горизонтали. */
    padding: 60px 20px; /* Задает внутренние отступы внутри элемента. */
    }
    
    .testimonial-container {
    display: flex; /* Определяет тип отображения элемента (например, flex, block). */
    align-items: center; /* Выравнивает элементы по поперечной оси flex-контейнера. */
        justify-content: flex-start; /* Выравниваем по левому краю */
    position: relative; /* Определяет способ позиционирования элемента. */
    width: 100%; /* Задает ширину элемента. */
    margin: 0 auto; /* Задает внешние отступы вокруг элемента. */
    padding: 20px 0; /* Задает внутренние отступы внутри элемента. */
    }
    
    .user-icon {
    width: 200px; /* Задает ширину элемента. */
    height: 200px; /* Задает высоту элемента. */
    border-radius: 50%; /* Описание этого свойства недоступно. */
        margin-left: 200px; /* Отступ слева */
        margin-right: 20px; /* Отступ справа */
    flex-shrink: 0; /* Описание этого свойства недоступно. */
    box-shadow: 0 0 10px rgba(255, 255, 255, 0.2); /* Добавляет тень к элементу. */
    }
    
    .testimonial-text {
    font-size: 20px; /* Задает размер текста. */
    color: var(--text-color); /* Задает цвет текста. */
    text-align: left; /* Выравнивает текст по горизонтали. */
        display: inline; /* Текст в строку */
        white-space: nowrap; /* Запрещает перенос текста */
    margin-left: 300px; /* Описание этого свойства недоступно. */
    max-width: 700px; /* Описание этого свойства недоступно. */
    line-height: 1.8; /* Определяет высоту строки текста. */
        margin-right: 90px; /* Отступ справа */
    }
    
    
    /* Navigation Arrows */
    button.prev,
    button.next {
    position: absolute; /* Определяет способ позиционирования элемента. */
        top: 50%; /* Центрирование стрелок по вертикали */
        transform: translateY(-50%); /* Смещение для идеального центрирования */
    background-color: transparent; /* Устанавливает цвет фона элемента. */
    border: none; /* Устанавливает стиль, ширину и цвет границы элемента. */
    color: var(--primary-color); /* Задает цвет текста. */
    font-size: 35px; /* Задает размер текста. */
    cursor: pointer; /* Определяет тип курсора при наведении на элемент. */
        z-index: 1; /* Устанавливаем поверх всего */
    }
    
    button.prev {
        left: 10px; /* Расположение слева */
    }
    
    button.next {
        right: 10px; /* Расположение справа */
    }
    
    button.prev:hover,
    button.next:hover {
        color: #c50010; /* Цвет при наведении */
    }
    
    
    
    
    
    
    /* Benefits Section (Desktop) */
    .benefits {
    display: flex; /* Определяет тип отображения элемента (например, flex, block). */
    justify-content: space-between; /* Выравнивает элементы по главной оси flex-контейнера. */
    gap: 20px; /* Устанавливает расстояние между элементами в flex-контейнере. */
    padding: 40px; /* Задает внутренние отступы внутри элемента. */
    }
    
    .benefit {
    flex: 1; /* Определяет, как элемент растягивается или сжимается в flex-контейнере. */
    background-color: #333; /* Устанавливает цвет фона элемента. */
    padding: 20px; /* Задает внутренние отступы внутри элемента. */
    text-align: left; /* Выравнивает текст по горизонтали. */
    box-shadow: 0 0 15px rgba(0, 0, 0, 0.2); /* Добавляет тень к элементу. */
    }
    
    .benefit h3 {
    font-size: 20px; /* Задает размер текста. */
    margin-bottom: 10px; /* Описание этого свойства недоступно. */
    }
    
    .benefit p {
    font-size: 16px; /* Задает размер текста. */
    color: #bbb; /* Задает цвет текста. */
    }
    
    /* Benefits Slider (Mobile) */
    .benefits-slider {
        display: none; /* Скрываем слайдер по умолчанию */
    }
    
    .slider-container {
    display: flex; /* Определяет тип отображения элемента (например, flex, block). */
    align-items: flex-start; /* Выравнивает элементы по поперечной оси flex-контейнера. */
    overflow: hidden; /* Описание этого свойства недоступно. */
    margin-top: 20px; /* Описание этого свойства недоступно. */
        
    }
    
    .slider-item {
        flex: 0 0 100%; /* Каждая карточка занимает весь экран */
    text-align: center; /* Выравнивает текст по горизонтали. */
    font-size: 25px; /* Задает размер текста. */
    padding: 20px; /* Задает внутренние отступы внутри элемента. */
    border-radius: 10px; /* Описание этого свойства недоступно. */
    box-shadow: 0 0 15px rgba(0, 0, 0, 0.2); /* Добавляет тень к элементу. */
    }
    
    
    
    
    .slider-arrows {
    display: flex; /* Определяет тип отображения элемента (например, flex, block). */
    justify-content: space-between; /* Выравнивает элементы по главной оси flex-контейнера. */
    position: absolute; /* Определяет способ позиционирования элемента. */
        top: 60%; /* Опускаем стрелки чуть пониже */
    left: 0; /* Устанавливает смещение элемента слева. */
    right: 0; /* Устанавливает смещение элемента справа. */
    transform: translateY(-50%); /* Описание этого свойства недоступно. */
    pointer-events: none; /* Описание этого свойства недоступно. */
    }
    
    button.prev-benefit, button.next-benefit {
    background: transparent; /* Описание этого свойства недоступно. */
    border: none; /* Устанавливает стиль, ширину и цвет границы элемента. */
    color: var(--primary-color); /* Задает цвет текста. */
        font-size: 20px; /* Уменьшение размера стрелок */
    cursor: pointer; /* Определяет тип курсора при наведении на элемент. */
    pointer-events: all; /* Описание этого свойства недоступно. */
    }
    
    button.prev-benefit {
    position: absolute; /* Определяет способ позиционирования элемента. */
    left: 10px; /* Устанавливает смещение элемента слева. */
    }
    
    button.next-benefit {
    position: absolute; /* Определяет способ позиционирования элемента. */
        right: 1px; /* Двигаем правую стрелку правее */
    }
    
    button.prev-benefit:hover, button.next-benefit:hover {
    color: #c50010; /* Задает цвет текста. */
    }
    
    
    
    
    
    
    /* Media Queries */
    @media (max-width: 768px) {
        .benefits {
            display: none; /* Скрываем секцию Benefits на мобильных */
        }
        .benefits-slider {
            display: block; /* Показываем слайдер только на мобильных */
        }
    }
    
    
    
    
    
    
    /* Media Query для мобильных устройств */
    @media (max-width: 768px) {
        body {
            font-size: 16px; /* Уменьшение общего размера текста */
            margin: 0; /* Убираем общий отступ у body */
    padding: 0; /* Задает внутренние отступы внутри элемента. */
        }
    
        header {
    flex-direction: row; /* Описание этого свойства недоступно. */
    text-align: center; /* Выравнивает текст по горизонтали. */
    justify-content: space-between; /* Выравнивает элементы по главной оси flex-контейнера. */
            
            
        }
    
        .logo {
    flex: 1; /* Определяет, как элемент растягивается или сжимается в flex-контейнере. */
    justify-content: flex-start; /* Выравнивает элементы по главной оси flex-контейнера. */
        }
    
        .logo img {
    height: 40px; /* Задает высоту элемента. */
        }
    
        .tagline {
    font-size: 12px; /* Задает размер текста. */
    margin-left: 10px; / /* Описание этого свойства недоступно. */
        }
    
        .login {
            flex: none; /* Кнопка не растягивается */
            margin-left: auto; /* Выровнена справа */
        }
    
        .hero {
            padding: 0; /* Убираем внутренние отступы секции hero */
            margin: 0; /* Убираем внешние отступы секции hero */
        }
    
        .hero-image {
            
            height: 200px; /* Высота адаптируется пропорционально ширине */
            margin: 0; /* Убираем отступы у изображения */
            border-radius: 0; /* Убираем скругление углов */
        }
    
        .video {
            width: 100%; /* Растягиваем секцию на всю ширину экрана */
            max-width: 100vw; /* Ограничиваем ширину до окна браузера */
            margin: 0; /* Убираем внешние отступы */
            padding: 0; /* Убираем внутренние отступы */
            overflow: hidden; /* Убираем прокрутку, если есть */
        }
        
        .video video {
            width: 100%; /* Растягиваем на всю ширину */
            height: 200px; /* Устанавливаем фиксированную высоту */
            object-fit: cover; /* Обрезает содержимое, чтобы заполнить блок */
            border: none; /* Убираем рамки */
        }
    
     
    
        .benefit {
            text-align: center; /* Выравнивание по центру */
    padding: 20px; /* Задает внутренние отступы внутри элемента. */
        }
    
        .features {
    display: flex; /* Определяет тип отображения элемента (например, flex, block). */
    justify-content: space-between; /* Выравнивает элементы по главной оси flex-контейнера. */
    gap: 20px; /* Устанавливает расстояние между элементами в flex-контейнере. */
            padding: 20px; /* Внутренние отступы */
        }
    
        @media (max-width: 768px) {
            .features {
                flex-direction: row; /* Выстраиваем блоки вертикально */
                gap: 20px; /* Расстояние между блоками */
                padding: 20px 10px; /* Отступы сверху/снизу 20px, слева/справа 10px */
            }
        
            .feature {
    margin-right: 10px; /* Описание этого свойства недоступно. */
                margin-left: 20px; /* Добавляем отступ справа */
            }
        }
    
        .feature {
            text-align: center; /* Центрирование блоков */
    padding: 20px; /* Задает внутренние отступы внутри элемента. */
           
        }
    
        .testimonials {
    padding: 20px; /* Задает внутренние отступы внутри элемента. */
            
        }
    
        .testimonial-container {
    display: flex; /* Определяет тип отображения элемента (например, flex, block). */
            align-items: flex-start; /* Выровнять элементы по верхнему краю */
            gap: 0px; /* Промежуток между иконкой и текстом */
            padding: 20px; /* Отступы вокруг контейнера */
    padding-right: 40px; /* Описание этого свойства недоступно. */
        }
    
        .user-icon {
            width: 100px; /* Уменьшение размера иконки */
    height: 100px; /* Задает высоту элемента. */
    margin-left: 0; /* Описание этого свойства недоступно. */
    margin-bottom: 20px; /* Описание этого свойства недоступно. */
             
            
            
        }
    
        .testimonial-text {
    font-size: 15px; /* Задает размер текста. */
            
            display: inline; /* Текст в строку */
            white-space: nowrap; /* Запрещает перенос текста */
    color: var(--text-color); /* Задает цвет текста. */
            line-height: 1; /* Межстрочный интервал */
            margin-top: 0; /* Убираем лишние отступы сверху */
    padding-top: 25px; /* Описание этого свойства недоступно. */
    padding-left: 50px; /* Описание этого свойства недоступно. */
        }
        
    
        /* Signup Section */
    .signup {
    display: flex; /* Определяет тип отображения элемента (например, flex, block). */
        flex-direction: column; /* Элементы располагаются вертикально */
        align-items: flex-start; /* Выравниваем элементы по левому краю */
        padding: 20px; /* Отступы внутри секции */
        background-color: #222; /* Фон секции */
    color: var(--text-color); /* Задает цвет текста. */
        max-width: 400px; /* Ограничиваем ширину секции */
        margin: 0 auto; /* Центрируем секцию на экране */
    margin-bottom: 10px; /* Описание этого свойства недоступно. */
    }
    
    .signup h2 {
    font-size: 24px; /* Задает размер текста. */
    margin-left: 75px; /* Описание этого свойства недоступно. */
        margin-bottom: 15px; /* Расстояние между заголовком и полем ввода */
    color: var(--text-color); /* Задает цвет текста. */
    }
    
    .signup form {
    display: flex; /* Определяет тип отображения элемента (например, flex, block). */
        flex-direction: column; /* Элементы формы располагаются вертикально */
        gap: 10px; /* Расстояние между полем ввода и кнопкой */
    margin-left: 40px; /* Описание этого свойства недоступно. */
        width: 100%; /* Форма занимает всю ширину родителя */
    }
    
    .signup input {
        padding: 10px; /* Внутренние отступы */
        font-size: 16px; /* Размер текста */
        width: 68%; /* Поле ввода растягивается по ширине */
        border: 1px solid #333; /* Граница */
        border-radius: 5px; /* Скруглённые углы */
    background-color: var(--background-color); /* Устанавливает цвет фона элемента. */
    color: var(--text-color); /* Задает цвет текста. */
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.2); /* Тень */
    }
    
    .signup button {
        
    padding: 10px; /* Задает внутренние отступы внутри элемента. */
    margin-right: 80px; /* Описание этого свойства недоступно. */
    margin-top: 60px; /* Описание этого свойства недоступно. */
        padding: 10px; /* Внутренние отступы */
        font-size: 16px; /* Размер текста */
        width: 80%; /* Поле ввода растягивается по ширине */
        border: 1px solid #333; /* Граница */
        border-radius: 5px; /* Скруглённые углы */
    background-color: var(--background-color); /* Устанавливает цвет фона элемента. */
    color: var(--text-color); /* Задает цвет текста. */
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.2); /* Тень */
    }
    
    .signup button:hover {
        background-color: #c50010; /* Темнее при наведении */
    }
    
    
    footer {
    display: flex; /* Определяет тип отображения элемента (например, flex, block). */
    justify-content: space-between; /* Выравнивает элементы по главной оси flex-контейнера. */
        align-items: flex-end; /* Выравнивание по нижнему краю */
    padding: 20px; /* Задает внутренние отступы внутри элемента. */
    background-color: #111; /* Устанавливает цвет фона элемента. */
    }
    
    .footer-menu,
    .social-media {
    display: flex; /* Определяет тип отображения элемента (например, flex, block). */
        align-items: flex-end; /* Выравнивание ссылок по нижнему краю */
    }
    
    .footer-menu a,
    .social-media a {
    color: var(--muted-text-color); /* Задает цвет текста. */
    text-decoration: none; /* Описание этого свойства недоступно. */
    margin: 0 10px; /* Задает внешние отступы вокруг элемента. */
    }
    
    .footer-menu a:hover,
    .social-media a:hover {
    color: var(--primary-color); /* Задает цвет текста. */
    }
    
    
      
        
    
    
    }
    
    
    
    @media (max-width: 1024px) {
        .testimonials {
    padding: 20px; /* Задает внутренние отступы внутри элемента. */
        }
    
        .testimonial-container {
            position: relative; /* Для позиционирования стрелок */
    display: flex; /* Определяет тип отображения элемента (например, flex, block). */
    align-items: center; /* Выравнивает элементы по поперечной оси flex-контейнера. */
    gap: 20px; /* Устанавливает расстояние между элементами в flex-контейнере. */
    padding: 20px; /* Задает внутренние отступы внутри элемента. */
        }
    
        .user-icon {
    width: 100px; /* Задает ширину элемента. */
    height: 100px; /* Задает высоту элемента. */
    margin: 0; /* Задает внешние отступы вокруг элемента. */
    flex-shrink: 0; /* Описание этого свойства недоступно. */
        }
    
        .testimonial-text {
            font-size: 16px; /* Размер текста */
            white-space: normal; /* Разрешает перенос текста на новую строку */
            text-align: left; /* Текст выравнен по левому краю */
    color: var(--text-color); /* Задает цвет текста. */
            line-height: 1.5; /* Межстрочный интервал */
    margin: 0; /* Задает внешние отступы вокруг элемента. */
            padding: 10px; /* Отступы вокруг текста */
    flex-grow: 1; /* Описание этого свойства недоступно. */
        }
    
        
        button.prev,
        button.next {
    position: absolute; /* Определяет способ позиционирования элемента. */
            top: 50%; /* Центрирование по вертикали */
            transform: translateY(-50%); /* Смещение для идеального центрирования */
    background-color: transparent; /* Устанавливает цвет фона элемента. */
    border: none; /* Устанавливает стиль, ширину и цвет границы элемента. */
    color: var(--primary-color); /* Задает цвет текста. */
            font-size: 20px; /* Уменьшение размера стрелок */
    cursor: pointer; /* Определяет тип курсора при наведении на элемент. */
    z-index: 1; /* Определяет порядок перекрытия элементов. */
        }
    
        button.prev {
            left: -20px; /* Расположение левее края экрана */
        }
    
        button.next {
            right: 10px; /* Расположение справа */
        }
    
        button.prev:hover,
        button.next:hover {
            color: #c50010; /* Цвет при наведении */
        }
    
    }
    
    #theme-toggle {
        padding: 15px 25px; /* Внутренние отступы */
        font-size: 17px; /* Размер текста */
        font-weight: 1000; /* Толщина текста */
        color: var(--text-color); /* Цвет текста */
        background-color: var(--secondary-color); /* Фон кнопки */
        border: none; /* Убираем рамку */
        box-shadow: 4px 8px 19px -3px rgba(0, 0, 0, 0.27); /* Тень */
        position: relative; /* Для анимации фона */
        cursor: pointer; /* Изменяем указатель мыши на "руку" */
        overflow: hidden; /* Прячем анимацию за границей кнопки */
        transition: transform 0.2s, background-color 0.3s; /* Плавные переходы */
        margin-top: -180px; /* Поднимаем кнопку выше */
    }
    
    #theme-toggle {
        padding: 15px 25px; /* Внутренние отступы */
        border: unset; /* Убираем рамку */
        color: #ffffff; /* Цвет текста */
        z-index: 1; /* Поверх всего */
        background: #2d2828; /* Фон */
        position: relative; /* Для анимации фона */
        font-weight: 1000; /* Толщина текста */
        font-size: 17px; /* Размер текста */
        box-shadow: 4px 8px 19px -3px rgba(0, 0, 0, 0.27); /* Тень */
        transition: all 250ms; /* Плавные переходы */
        overflow: hidden; /* Прячем анимацию за границей кнопки */
        text-decoration: none; /* Убираем подчеркивание текста */
        display: inline-block; /* Для корректного отображения */
        cursor: pointer; /* Курсор "рука" при наведении */
    }
    
    #theme-toggle::before {
    content: ""; /* Описание этого свойства недоступно. */
    position: absolute; /* Определяет способ позиционирования элемента. */
    top: 0; /* Устанавливает смещение элемента сверху. */
    left: 0; /* Устанавливает смещение элемента слева. */
    height: 100%; /* Задает высоту элемента. */
    width: 0; /* Задает ширину элемента. */
        background-color: #d31717a8; /* Полупрозрачный акцент */
        z-index: -1; /* За текстом */
        box-shadow: 4px 8px 19px -3px rgba(255, 255, 255, 0.27); /* Дополнительная тень */
        transition: all 250ms; /* Анимация заливки */
    }
    
    #theme-toggle:hover {
        color: #fefefe; /* Белый текст при наведении */
    }
    
    #theme-toggle:hover::before {
        width: 100%; /* Заливка всей кнопки при наведении */
    }
    
    #theme-toggle:active {
        transform: translateY(2px); /* Эффект нажатия */
    }
    
    
    
    /* ==== Модальное окно (скрыто по умолчанию) ==== */
    .modal {
        display: none; /* Скрываем по умолчанию */
        position: fixed; /* Фиксированное положение на экране */
        z-index: 999; /* Поверх всех элементов */
    left: 0; /* Устанавливает смещение элемента слева. */
    top: 0; /* Устанавливает смещение элемента сверху. */
    width: 100%; /* Задает ширину элемента. */
    height: 100%; /* Задает высоту элемента. */
        overflow: auto; /* Прокрутка, если контента много */
        background-color: rgba(0, 0, 0, 0.6); /* Полупрозрачный фон */
      }
      
      /* ==== Контейнер содержимого модального окна ==== */
      .modal-content {
    background-color: #333; /* Устанавливает цвет фона элемента. */
        margin: 10% auto; /* Отцентрируем по вертикали и горизонтали */
    padding: 20px; /* Задает внутренние отступы внутри элемента. */
    border: 1px solid #888; /* Устанавливает стиль, ширину и цвет границы элемента. */
    width: 80%; /* Задает ширину элемента. */
        max-width: 400px; /* Макс. ширина всплывающего окна */
        position: relative; /* Для позиционирования кнопки закрытия */
    color: #fff; /* Задает цвет текста. */
    box-shadow: 0 0 15px rgba(0, 0, 0, 0.5); /* Добавляет тень к элементу. */
    border-radius: 8px; /* Описание этого свойства недоступно. */
      }
      
      /* ==== Кнопка (иконка) закрытия (крестик) ==== */
      .close {
    color: #aaa; /* Задает цвет текста. */
        float: right; /* Расположить справа */
    font-size: 28px; /* Задает размер текста. */
    font-weight: bold; /* Определяет толщину шрифта. */
    cursor: pointer; /* Определяет тип курсора при наведении на элемент. */
    position: absolute; /* Определяет способ позиционирования элемента. */
    top: 10px; /* Устанавливает смещение элемента сверху. */
    right: 20px; /* Устанавливает смещение элемента справа. */
      }
      
      .close:hover,
      .close:focus {
    color: #fff; /* Задает цвет текста. */
      }
      
      /* Внутренние элементы формы */
      .modal-content form {
    display: flex; /* Определяет тип отображения элемента (например, flex, block). */
    flex-direction: column; /* Описание этого свойства недоступно. */
    gap: 15px; /* Устанавливает расстояние между элементами в flex-контейнере. */
      }
      
      .modal-content form label {
    font-weight: 600; /* Определяет толщину шрифта. */
      }
      
      .modal-content form input[type="text"],
      .modal-content form input[type="tel"] {
    padding: 10px; /* Задает внутренние отступы внутри элемента. */
    font-size: 16px; /* Задает размер текста. */
    border: 1px solid #555; /* Устанавливает стиль, ширину и цвет границы элемента. */
    border-radius: 4px; /* Описание этого свойства недоступно. */
    background-color: #222; /* Устанавливает цвет фона элемента. */
    color: #fff; /* Задает цвет текста. */
      }
      
      .modal-content form button {
    background-color: var(--primary-color); /* Устанавливает цвет фона элемента. */
    color: #fff; /* Задает цвет текста. */
    border: none; /* Устанавливает стиль, ширину и цвет границы элемента. */
    padding: 12px; /* Задает внутренние отступы внутри элемента. */
    font-size: 16px; /* Задает размер текста. */
    cursor: pointer; /* Определяет тип курсора при наведении на элемент. */
    border-radius: 4px; /* Описание этого свойства недоступно. */
      }
      
   /* --- Карточки мышек --- */
.mouse-cards {
    display: flex;                  /* Размещаем карточки в ряд */
    justify-content: center;        /* Центрируем их по горизонтали */
    gap: 20px;                      /* Расстояние между карточками */
    padding: 40px;                  /* Внутренние отступы сверху/снизу/слева/справа */
    flex-wrap: wrap;               /* Чтобы карточки переносились на новую строку при узком экране */
    background-color: #181818;      /* Цвет фона секции */
}

.mouse-cards h2 {
    width: 100%;
    text-align: center;
    margin-bottom: 30px;
    font-size: 28px;
    color: var(--text-color);
    text-shadow: 0 0 5px var(--highlight-color);
}

/* Стили для каждой карточки */
.mouse-cards {
    display: flex;            /* Размещаем карточки в ряд */
    justify-content: center;  /* Центрируем их по горизонтали */
    gap: 20px;                /* Расстояние между карточками */
    padding: 40px;            /* Внутренние отступы */
    flex-wrap: wrap;          /* По умолчанию разрешаем перенос на новую строку */
    background-color: #181818;
}

.mouse-cards {
    display: flex;               /* Размещаем карточки в ряд */
    justify-content: center;     /* Центрируем их по горизонтали */
    gap: 20px;                   /* Расстояние между карточками */
    padding: 40px;               /* Внутренние отступы */
    flex-wrap: wrap;             /* По умолчанию разрешаем перенос */
    background-color: #1e1e1e
}

/* ----- Карточка ----- */
.card {
    background-color: #333;
    flex: 1 1 250px;             /* Каждый блок тянется, минимальная ширина ~250px */
    max-width: 800px;            /* Можно ограничить максимальную ширину карточки */
    text-align: center;
    
    margin: 10px;

    box-shadow: 0 0 15px rgba(0,0,0,0.3);
    transition: transform 0.3s ease;
}

.card:hover {
    transform: translateY(-5px) scale(1.03);
}

/* ----- Контейнер для изображения ----- */
.card-image-container {
    margin: 0 auto;           /* Центрируем контейнер */
    width: 30%;
    height: 200px;
    position: relative;
    overflow: hidden;         /* Скрываем «вылезающие» части при анимации */
    margin-bottom: 15px;
}

/* Изображение внутри карточки */
.card img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.6s ease;  /* Плавная анимация */
}

/* Увеличение при наведении на картинку */
.card img:hover {
    transform: scale(1.3);
}

/* Текст описания */
.card p {
    font-size: 16px;
    color: #bbb;
    line-height: 1.5;
}

/* --- Адаптация под мобильные устройства (уменьшаем карточки в одну строку) --- */
@media (max-width: 768px) {
    .mouse-cards {
        flex-wrap: nowrap;         /* Запрещаем перенос */
        justify-content: space-around; 
    }
    .card {
        /* Фиксируем ширину каждой карточки, чтобы все умещались в одну линию */
        
        max-width: 28%;
        margin: 1px;               /* Чуть уменьшим отступы */
    }

    .card-image-container {
        margin: 0 auto;           /* Центрируем контейнер */
        height: 100px;
        position: relative;
        overflow: hidden;         /* Скрываем «вылезающие» части при анимации */
        margin-bottom: 15px;
    }
}

/* ----- Общая обёртка карусели ----- */
.carousel {
    position: relative;      /* Для возможной абсолютной позиции кнопок или индикаторов */
    width: 100%;             /* Растягиваем на всю ширину контейнера */
    max-width: 500px;        /* Можно задать максимальную ширину */
    margin: 0 auto;          /* Центрируем слайдер на странице */
    overflow: hidden;        /* Скрываем «лишние» части при прокрутке внутри */
    
  }
  
  /* ----- Контейнер со слайдами ----- */
  .carousel-container {
    display: flex;                     /* Ряды слайдов */
    transition: transform 0.5s ease;   /* Плавная анимация при смене слайда */
    will-change: transform;            /* Оптимизация рендеринга */
  }
  
  /* ----- Каждый слайд ----- */
  .carousel-slide {
    flex: 0 0 100%;  /* Каждый слайд занимает 100% ширины видимой области */
    position: relative;
  }
  
  .carousel-slide img {
    width: 100%;
    height: auto;     /* Автоматическая пропорция по высоте */
    display: block;   /* Убираем возможные «пустые» пробелы */
  }
  
  /* ----- Индикаторы-точки ----- */
  .carousel-dots {
    text-align: center;
    margin-top: 10px;
  }
  
 
  
  .carousel-dots .dot.active {
    background-color: #333;  /* Активная точка */
  }
  
  /* ----- Адаптивность под мобильные устройства ----- */
  @media (max-width: 768px) {
    .carousel {
      max-width: 80%;  /* На мобильных пусть тянется на всю ширину экрана */
    }
  
    .carousel-dots .dot {
      width: 10px;
      height: 10px;
    }
  }
  
